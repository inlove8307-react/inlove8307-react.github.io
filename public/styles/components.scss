@charset "utf-8";

:root {
	--inset: inset 0 0 0 .1rem var(--light2);
	--inset-focus: inset 0 0 0 .2rem var(--light3);
	--inset-valid: inset 0 0 0 .1rem var(--valid);
	--inset-valid-focus: inset 0 0 0 .2rem var(--valid);
	--inset-invalid: inset 0 0 0 .1rem var(--invalid);
	--inset-invalid-focus: inset 0 0 0 .2rem var(--invalid);
	--inset-transition: box-shadow .1s ease-in-out;
}



/* <UxDivider> */
.ux-divider {display: block; margin: 0 var(--space-minus); border: 0; height: .8rem; background-color: var(--light1);}
.ux-divider.linear {margin: 0; height: .1rem;}



/* <UxButton> */
.ux-button {display: inline-flex; justify-content: center; align-items: center; gap: .8rem; padding: 0 1.2rem; width: 100%; min-height: 4rem; border-radius: 1rem; box-shadow: var(--inset); background-color: var(--light0); font-size: 1.6rem; color: var(--dark1); letter-spacing: 0; transition: var(--inset-transition); transform: translateZ(0);}
.ux-button-label {overflow: hidden; white-space: nowrap; text-overflow: ellipsis;}
/* <UxButton> Focus */
.ux-button:hover,
.ux-button:focus {box-shadow: var(--inset-focus);}
/* <UxButton> Disabled */
.ux-button.disabled,
.ux-button:disabled {opacity: 0.5; cursor: default; pointer-events: none;}



/* <UxInput> */
.ux-input {display: flex; align-items: center; gap: .8rem; padding: 0 1.2rem; height: 4rem; border-radius: .8rem; box-shadow: var(--inset); background-color: var(--light0); transition: var(--inset-transition); transform: translateZ(0);}
.ux-input .ux-input-base {flex-grow: 1; flex-shrink: 0; flex-basis: 0; width: 100%; border: 0; background-color: transparent; caret-color: var(--dark3);}
.ux-input .ux-input-base:focus,
.ux-input .ux-input-base:focus-visible {outline: none;}
/* <UxInput> Align */
.ux-input.left .ux-input-base {text-align: left;}
.ux-input.right .ux-input-base {text-align: right;}
.ux-input.center .ux-input-base {text-align: center;}
/* <UxInput> Prefix */
.ux-input .ux-input-prefix {flex-shrink: 0;}
/* <UxInput> Suffix */
.ux-input .ux-input-suffix {flex-shrink: 0;}
/* <UxInput> Timer */
.ux-input .ux-input-timer {flex-shrink: 0; color: var(--invalid);}
/* <UxInput> Submit */
.ux-input .ux-button.submit {flex-shrink: 0; padding: 0 0.8rem; width: initial; min-height: initial; height: 2.4rem; border-radius: .8rem; background-color: var(--light1); font-size: 1.4rem; box-shadow: none;}
.ux-input .ux-button.submit:hover,
.ux-input .ux-button.submit:focus {box-shadow: none;}
/* <UxInput> Focus */
.ux-input:focus-within {box-shadow: var(--inset-focus);}
/* <UxInput> Valid */
.ux-input.valid {box-shadow: var(--inset-valid);}
.ux-input.valid:focus-within {box-shadow: var(--inset-valid-focus);}
/* <UxInput> Invalid */
.ux-input.invalid {box-shadow: var(--inset-invalid);}
.ux-input.invalid:focus-within {box-shadow: var(--inset-invalid-focus);}
/* <UxInput> Readonly */
.ux-input.readonly .ux-input-base,
.ux-input.readonly .ux-input-prefix,
.ux-input.readonly .ux-input-suffix,
.ux-input.readonly .ux-input-timer {color: var(--dark3);}
/* <UxInput> Disabled */
.ux-input.disabled {box-shadow: inset 0 0 0 .1rem var(--light3); background-color: var(--light1);}
.ux-input.disabled .ux-input-base,
.ux-input.disabled .ux-input-prefix,
.ux-input.disabled .ux-input-suffix,
.ux-input.disabled .ux-input-timer {color: var(--dark3);}



/* <UxMasking> */
.ux-masking {overflow-x: auto; display: flex; align-items: center; position: relative;}
.ux-masking::-webkit-scrollbar {display: none;}
/* <UxMasking> Mask */
.ux-masking .ux-masking-mask {display: flex; align-items: center; gap: .4rem; position: absolute; top: 0; left: 0; width: 100%; height: 100%; pointer-events: none;}
.ux-masking .ux-masking-item {flex-shrink: 0; width: .8rem; height: .8rem; border-radius: 50%; background-color: var(--light2);}
/* <UxMasking> Input */
.ux-masking .ux-masking-input {padding: 0; width: 100%; border: 0; background-color: transparent; color: transparent; caret-color: transparent;}
.ux-masking .ux-masking-input:focus,
.ux-masking .ux-masking-input:focus-visible {outline: none;}
.ux-masking .ux-masking-input::selection {background-color: transparent; /* WebKit/Blink Browsers */}
.ux-masking .ux-masking-input::-moz-selection {background-color: transparent; /* Gecko Browsers */}
/* <UxMasking> Enable */
.ux-masking .ux-masking-item.enabled {background-color: var(--dark2);}
/* <UxMasking> Readonly, Disabled */
.ux-masking.readonly .ux-masking-item,
.ux-masking.disabled .ux-masking-item {background-color: var(--dark3);}
/* <UxMasking> z-index */
.ux-masking .ux-masking-mask {z-index: 1;}



/* <UxPassword> */
.ux-password {display: flex; align-items: center; gap: .8rem; padding: 0 1.2rem; height: 4rem; border-radius: .8rem; box-shadow: var(--inset); background-color: var(--light0); transition: var(--inset-transition); transform: translateZ(0);}
/* <UxPassword> Focus */
.ux-password:focus-within {box-shadow: var(--inset-focus);}
/* <UxPassword> Valid */
.ux-password.valid {box-shadow: var(--inset-valid);}
.ux-password.valid:focus-within {box-shadow: var(--inset-valid-focus);}
/* <UxPassword> Invalid */
.ux-password.invalid {box-shadow: var(--inset-invalid);}
.ux-password.invalid:focus-within {box-shadow: var(--inset-invalid-focus);}
/* <UxPassword> Disabled */
.ux-password.disabled {background-color: var(--light1);}
/* <UxPassword> Masking */
.ux-password .ux-masking {flex-grow: 1; height: 100%;}



/* <UxInputGroup> */
.ux-input-group {display: flex; align-items: center; gap: .8rem; padding: 0 1.2rem; height: 4rem; border-radius: .8rem; box-shadow: var(--inset); background-color: var(--light0); transition: var(--inset-transition); transform: translateZ(0);}
/* <UxInputGroup> Focus */
.ux-input-group:focus-within {box-shadow: var(--inset-focus);}
/* <UxInputGroup> Valid */
.ux-input-group.valid {box-shadow: var(--inset-valid);}
.ux-input-group.valid:focus-within {box-shadow: var(--inset-valid-focus);}
/* <UxInputGroup> Invalid */
.ux-input-group.invalid {box-shadow: var(--inset-invalid);}
.ux-input-group.invalid:focus-within {box-shadow: var(--inset-invalid-focus);}
/* <UxInputGroup> Disabled */
.ux-input-group.disabled {box-shadow: inset 0 0 0 .1rem var(--light3); background-color: var(--light1);}
/* <UxInputGroup> Input */
.ux-input-group .ux-input {flex-shrink: 0; padding: 0; box-shadow: none; background-color: transparent;}
.ux-input-group.readonly .ux-input,
.ux-input-group.disabled .ux-input {background-color: transparent;}
/* <UxInputGroup> Password */
.ux-input-group .ux-password {flex-shrink: 0; padding: 0; box-shadow: none; background-color: transparent;}
.ux-input-group.readonly .ux-password,
.ux-input-group.disabled .ux-password {background-color: transparent;}
/* <UxInputGroup> Dash */
.ux-input-group .ux-input.dash::before,
.ux-input-group .ux-password.dash::before {content: ''; flex-shrink: 0; width: 6px; height: 2px; background-color: var(--light3);}
/* <UxInputGroup> Last */
.ux-input-group .ux-input.last,
.ux-input-group .ux-password.last {flex-grow: 1; flex-shrink: initial;}
/* <UxInputGroup> Submit */
.ux-input-group .ux-button.submit {flex-shrink: 0; padding: 0 0.8rem; width: initial; min-height: initial; height: 2.4rem; border-radius: .8rem; background-color: var(--light1); font-size: 1.4rem; box-shadow: none;}
.ux-input-group .ux-button.submit:hover,
.ux-input-group .ux-button.submit:focus {box-shadow: none;}



/* <UxCheckbox> */
.ux-checkbox {display: inline-flex;}
.ux-checkbox .ux-checkbox-base {display: inline-flex; position: relative; align-items: center; gap: .8rem; cursor: pointer;}
.ux-checkbox .ux-checkbox-input[type=checkbox] {visibility: hidden; position: absolute; top: 0; left: 0; width: 0; height: 0; border: 0; background-color: transparent; opacity: 0;}
.ux-checkbox .ux-checkbox-label {flex-shrink: 0;}
.ux-checkbox .ux-icon {flex-shrink: 0; pointer-events: none;}
/* <UxCheckbox> Checked */
.ux-checkbox.checked .ux-icon {background-color: var(--color1);}
/* <UxCheckbox> Disabled */
.ux-checkbox.disabled .ux-icon {background-color: var(--light2);}



/* <UxCheckboxGroup> */
.ux-checkbox-group {display: flex;flex-wrap: wrap;gap: 1.6rem;}
.ux-checkbox-group .ux-checkbox {flex-grow: 1;}
/* <UxCheckboxGroup> Column */
.ux-checkbox-group.column {flex-direction: column;}



/* <UxRadio> */
.ux-radio {display: inline-flex;}
.ux-radio .ux-radio-base {display: inline-flex; position: relative; align-items: center; gap: .8rem; cursor: pointer;}
.ux-radio .ux-radio-input[type=radio] {visibility: hidden; position: absolute; top: 0; left: 0; width: 0; height: 0; border: 0; background-color: transparent; opacity: 0; z-index: -1;}
.ux-radio .ux-radio-label {flex-shrink: 0;}
.ux-radio .ux-icon {flex-shrink: 0;}
/* <UxRadio> Checked */
.ux-radio.checked .ux-icon {background-color: var(--color1);}
/* <UxRadio> Disabled */
.ux-radio.disabled .ux-icon {background-color: var(--light2);}



/* <UxRadioGroup> */
.ux-radio-group {display: flex; flex-wrap: wrap; gap: 1.6rem;}
.ux-radio-group .ux-radio {flex-grow: 1;}
/* <UxRadioGroup> Column */
.ux-radio-group.column {flex-direction: column;}



/* <UxToggle> */
.ux-toggle {display: flex; height: 4rem;}
.ux-toggle .ux-toggle-base {position: relative; display: flex; justify-content: center; align-items: center; padding: 0 1.2rem; width: 100%; height: 100%; cursor: pointer;}
.ux-toggle .ux-toggle-input[type=radio] {visibility: hidden; position: absolute; top: 0; left: 0; width: 0; height: 0; border: 0; background-color: transparent; opacity: 0; z-index: -1;}
.ux-toggle .ux-toggle-label {overflow: hidden; white-space: nowrap; text-overflow: ellipsis;}
/* <UxToggle> Checked */
.ux-toggle.checked .ux-toggle-base::before {content: ''; position: absolute; top: 50%; left: 50%; width: 100%; height: 100%; border-radius: .8rem; border: .2rem solid var(--color1); transform: translate(-50%, -50%);}



/* <UxToggleGroup> */
.ux-toggle-group {display: flex; flex-wrap: wrap; gap: .1rem 0; width: 100%; border-radius: .8rem; box-shadow: var(--inset); background-image: repeating-linear-gradient(to right, var(--light0), var(--light0) .8rem, transparent .8rem, transparent calc(100%)), repeating-linear-gradient(to left, var(--light0), var(--light0) .8rem, transparent .8rem, transparent calc(100%)), repeating-linear-gradient(to bottom, transparent, transparent 4rem, var(--light1) 4rem, var(--light1) 4.1rem); background-color: var(--light0);}
.ux-toggle-group .ux-toggle {position: relative; flex-grow: 1; flex-shrink: 0; flex-basis: 0;}
.ux-toggle-group .ux-toggle:not(:first-of-type):not(.checked)::before {content: ""; position: absolute; top: 50%; left: 0; width: .1rem; height: 50%; background-color: var(--light1); transform: translateY(-50%);}
/* <UxToggleGroup> Col */
.ux-toggle-group[class*=col] .ux-toggle {flex-grow: 0;}
.ux-toggle-group.col2 .ux-toggle {flex-basis: calc(100% / 2);}
.ux-toggle-group.col3 .ux-toggle {flex-basis: calc(100% / 3);}
.ux-toggle-group.col4 .ux-toggle {flex-basis: calc(100% / 4);}
.ux-toggle-group.col3 .ux-toggle:nth-child(3n + 1)::before,
.ux-toggle-group.col2 .ux-toggle:nth-child(2n + 1)::before,
.ux-toggle-group.col4 .ux-toggle:nth-child(4n + 1)::before {display: none;}



/* <UxCollapse> */
.ux-collapse {display: flex; flex-direction: column; border-radius: .8rem; box-shadow: var(--inset);}
.ux-collapse + .ux-collapse {border-top: .1rem solid var(--light2);}
.ux-collapse-summary {display: flex; align-items: center; min-height: 4rem;}
.ux-collapse-summary [data-role=summary] {flex-grow: 1; padding-left: 1.2rem;}
.ux-collapse-button {flex-shrink: 0; display: flex; align-items: center; padding: 0 1.2rem;}
.ux-collapse-details {overflow: hidden; max-height: 0; box-shadow: var(--index); transition: max-height .15s ease-in-out;}
.ux-collapse-details [data-role=details] {padding: 1.2rem;}
/* <UxCollapse> Expanded */
.ux-collapse.expanded .ux-collapse-details {max-height: auto;}
/* <UxCollapseGroup> */
.ux-collapse-group {overflow: hidden; width: 100%; border-radius: .8rem; border: .1rem solid var(--light2); background-color: var(--light0);}
.ux-collapse-group .ux-collapse {border-radius: initial; box-shadow: initial;}



/* <UxCalendar> */
.ux-calendar {}
.ux-calendar-base {}
/* <UxCalendar> Header */
.ux-calendar-header {display: flex; justify-content: center; gap: 3.2rem; height: 4rem;}
.ux-calendar-header .ux-calendar-select {display: flex; align-items: center; gap: .8rem; padding: 0;}
.ux-calendar-header .ux-calendar-prev,
.ux-calendar-header .ux-calendar-next {display: flex; align-items: center; gap: .8rem; padding: 0;}
/* <UxCalendar> Content */
.ux-calendar-content {position: relative;}
/* <UxCalendar> DateCalendar */
.ux-calendar-date {display: grid; grid-template-columns: repeat(7, 1fr); height: 28rem;}
.ux-calendar-date > :nth-child(7n),
.ux-calendar-date > :nth-child(7n + 1) {color: var(--color1);}
.ux-calendar-date .ux-calendar-week {display: flex; justify-content: center; align-items: center; height: 3.6rem;}
.ux-calendar-date .ux-calendar-button {display: flex; justify-content: center; align-items: center; height: 4rem;}
.ux-calendar-date .ux-calendar-button .ux-calendar-label {display: flex; justify-content: center; align-items: center; width: 4rem; height: 4rem; border-radius: 2rem;}
/* <UxCalendar> DateCalendar Today */
.ux-calendar-date .ux-calendar-button.today .ux-calendar-label {background-color: var(--light1);}
/* <UxCalendar> DateCalendar Disabled */
.ux-calendar-date .ux-calendar-button.disabled .ux-calendar-label {opacity: .5;}
/* <UxCalendar> DateCalendar Selected */
.ux-calendar-date .ux-calendar-button.selected .ux-calendar-label {background-color: var(--color1); font-weight: 600; color: var(--light0);}
/* <UxCalendar> MonthCalendar */
.ux-calendar-month {display: flex; flex-wrap: wrap; align-items: center; width: 100%; height: 28rem; background-color: var(--light0);}
.ux-calendar-month .ux-calendar-button {width: calc(100% / 3);}
.ux-calendar-month .ux-calendar-button {display: flex; justify-content: center; align-items: center; height: 4rem;}
.ux-calendar-month .ux-calendar-button .ux-calendar-label {display: flex; justify-content: center; align-items: center; width: 4rem; height: 4rem; border-radius: 2rem;}
/* <UxCalendar> MonthCalendar Selected */
.ux-calendar-month .ux-calendar-button.selected .ux-calendar-label {background-color: var(--color1); font-weight: 600; color: var(--light0);}
/* <UxCalendar> YearCalendar */
.ux-calendar-year {overflow-y: auto; display: flex; flex-wrap: wrap; align-items: center; width: 100%; height: 28rem; background-color: var(--light0);}
.ux-calendar-year .ux-calendar-button.direction {width: 100%;}
.ux-calendar-year .ux-calendar-button {display: flex; justify-content: center; align-items: center; height: 4rem;}
.ux-calendar-year .ux-calendar-button .ux-calendar-label {display: flex; justify-content: center; align-items: center; width: 100%; height: 4rem; border-radius: 2rem;}
/* <UxCalendar> YearCalendar Selected */
.ux-calendar-year .ux-calendar-button.selected .ux-calendar-label {background-color: var(--color1); font-weight: 600; color: var(--light0);}