@charset "utf-8";

:root {
  --inset: inset 0 0 0 .1rem var(--light2);
  --inset-focus: inset 0 0 0 .2rem var(--light3);
  --inset-valid: inset 0 0 0 .1rem var(--valid);
  --inset-valid-focus: inset 0 0 0 .2rem var(--valid);
  --inset-invalid: inset 0 0 0 .1rem var(--invalid);
  --inset-invalid-focus: inset 0 0 0 .2rem var(--invalid);
  --inset-transition: box-shadow .1s ease-in-out;
}



/* <UxButton> */
.ux-divider {display: block; margin: 0 var(--space-minus); border: 0; height: .8rem; background-color: var(--light1);}
.ux-divider.linear {margin: 0; height: .1rem;}



/* <UxButton> */
.ux-button {display: inline-flex; justify-content: center; align-items: center; gap: .8rem; padding: 0 1.2rem; width: 100%; min-height: 4rem; border-radius: 1rem; box-shadow: var(--inset); background-color: var(--light0); font-size: 1.6rem; color: var(--dark1); letter-spacing: 0; transition: var(--inset-transition); transform: translateZ(0);}
.ux-button-label {overflow: hidden; white-space: nowrap; text-overflow: ellipsis;}
/* <UxButton> Focus */
.ux-button:hover,
.ux-button:focus {box-shadow: var(--inset-focus);}
/* <UxButton> Disabled */
.ux-button.disabled,
.ux-button:disabled {opacity: 0.5; cursor: default; pointer-events: none;}



/* <UxInput> */
.ux-input {display: flex; align-items: center; gap: .8rem; padding: 0 1.2rem; height: 4rem; border-radius: .8rem; box-shadow: var(--inset); background-color: var(--light0); transition: var(--inset-transition); transform: translateZ(0);}
.ux-input .ux-input-base {flex-grow: 1; flex-shrink: 0; flex-basis: 0; width: 100%; border: 0; background-color: transparent; caret-color: var(--dark3);}
.ux-input .ux-input-base:focus,
.ux-input .ux-input-base:focus-visible {outline: none;}
/* <UxInput> Align */
.ux-input.left .ux-input-base {text-align: left;}
.ux-input.right .ux-input-base {text-align: right;}
.ux-input.center .ux-input-base {text-align: center;}
/* <UxInput> Prefix */
.ux-input .ux-input-prefix {flex-shrink: 0;}
/* <UxInput> Suffix */
.ux-input .ux-input-suffix {flex-shrink: 0;}
/* <UxInput> Timer */
.ux-input .ux-input-timer {flex-shrink: 0; color: var(--invalid);}
/* <UxInput> Submit */
.ux-input .ux-button.submit {flex-shrink: 0; padding: 0 0.8rem; width: initial; min-height: initial; height: 2.4rem; border-radius: .8rem; background-color: var(--light1); font-size: 1.4rem; box-shadow: none;}
.ux-input .ux-button.submit:hover,
.ux-input .ux-button.submit:focus {box-shadow: none;}
/* <UxInput> Focus */
.ux-input:focus-within {box-shadow: var(--inset-focus);}
/* <UxInput> Valid */
.ux-input.valid {box-shadow: var(--inset-valid);}
.ux-input.valid:focus-within {box-shadow: var(--inset-valid-focus);}
/* <UxInput> Invalid */
.ux-input.invalid {box-shadow: var(--inset-invalid);}
.ux-input.invalid:focus-within {box-shadow: var(--inset-invalid-focus);}
/* <UxInput> Readonly */
.ux-input.readonly .ux-input-base,
.ux-input.readonly .ux-input-prefix,
.ux-input.readonly .ux-input-suffix,
.ux-input.readonly .ux-input-timer {color: var(--dark3);}
/* <UxInput> Disabled */
.ux-input.disabled {box-shadow: inset 0 0 0 .1rem var(--light3); background-color: var(--light1);}
.ux-input.disabled .ux-input-base,
.ux-input.disabled .ux-input-prefix,
.ux-input.disabled .ux-input-suffix,
.ux-input.disabled .ux-input-timer {color: var(--dark3);}



/* <UxInputGroup> */
.ux-input-group {display: flex; align-items: center; gap: .8rem; padding: 0 1.2rem; height: 4rem; border-radius: .8rem; box-shadow: var(--inset); background-color: var(--light0); transition: var(--inset-transition); transform: translateZ(0);}
/* <UxInputGroup> Focus */
.ux-input-group:focus-within {box-shadow: var(--inset-focus);}
/* <UxInputGroup> Valid */
.ux-input-group.valid {box-shadow: var(--inset-valid);}
.ux-input-group.valid:focus-within {box-shadow: var(--inset-valid-focus);}
/* <UxInputGroup> Invalid */
.ux-input-group.invalid {box-shadow: var(--inset-invalid);}
.ux-input-group.invalid:focus-within {box-shadow: var(--inset-invalid-focus);}
/* <UxInputGroup> Disabled */
.ux-input-group.disabled {box-shadow: inset 0 0 0 .1rem var(--light3); background-color: var(--light1);}
.ux-input-group.disabled .ux-input {background-color: transparent;}
/* <UxInputGroup> Readonly */
.ux-input-group.readonly .ux-input {background-color: transparent;}
/* <UxInputGroup> Input */
.ux-input-group .ux-input {flex-shrink: 0; padding: 0; box-shadow: none; background-color: transparent;}
.ux-input-group .ux-input.dash::before {content: ''; width: 6px; height: 2px; background-color: var(--light3);}
.ux-input-group .ux-input.last {flex-grow: 1; flex-shrink: initial;}
/* <UxInputGroup> Submit */
.ux-input-group .ux-button.submit {flex-shrink: 0; padding: 0 0.8rem; width: initial; min-height: initial; height: 2.4rem; border-radius: .8rem; background-color: var(--light1); font-size: 1.4rem; box-shadow: none;}
.ux-input-group .ux-button.submit:hover,
.ux-input-group .ux-button.submit:focus {box-shadow: none;}



/* <UxCheckbox> */
.ux-checkbox {display: inline-flex;}
.ux-checkbox .ux-checkbox-base {display: inline-flex; position: relative; align-items: center; gap: .8rem; cursor: pointer;}
.ux-checkbox .ux-checkbox-input[type=checkbox] {visibility: hidden; position: absolute; top: 0; left: 0; width: 0; height: 0; border: 0; background-color: transparent; opacity: 0;}
.ux-checkbox .ux-checkbox-label {flex-shrink: 0;}
.ux-checkbox .ux-icon {flex-shrink: 0; pointer-events: none;}
/* <UxCheckbox> Checked */
.ux-checkbox.checked .ux-icon {background-color: var(--color1);}
/* <UxCheckbox> Disabled */
.ux-checkbox.disabled .ux-icon {background-color: var(--light2);}



/* <UxCheckboxGroup> */
.ux-checkbox-group {display: flex;flex-wrap: wrap;gap: 1.6rem;}
.ux-checkbox-group .ux-checkbox {flex-grow: 1;}
/* <UxCheckboxGroup> Column */
.ux-checkbox-group.column {flex-direction: column;}



/* <UxRadio> */
.ux-radio {display: inline-flex;}
.ux-radio .ux-radio-base {display: inline-flex; position: relative; align-items: center; gap: .8rem; cursor: pointer;}
.ux-radio .ux-radio-input[type=radio] {visibility: hidden; position: absolute; top: 0; left: 0; width: 0; height: 0; border: 0; background-color: transparent; opacity: 0; z-index: -1;}
.ux-radio .ux-radio-label {flex-shrink: 0;}
.ux-radio .ux-icon {flex-shrink: 0;}
/* <UxRadio> Checked */
.ux-radio.checked .ux-icon {background-color: var(--color1);}
/* <UxRadio> Disabled */
.ux-radio.disabled .ux-icon {background-color: var(--light2);}



/* <UxRadioGroup> */
.ux-radio-group {display: flex; flex-wrap: wrap; gap: 1.6rem;}
.ux-radio-group .ux-radio {flex-grow: 1;}
/* <UxRadioGroup> Column */
.ux-radio-group.column {flex-direction: column;}